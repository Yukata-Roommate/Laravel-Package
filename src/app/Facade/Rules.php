<?php

namespace YukataRm\Laravel\Facade;

use Illuminate\Support\Facades\Facade;

/**
 * Validation Rules Facade
 *
 * @package YukataRm\Laravel\Facade
 *
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface make(string $key)
 *
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface addString(string $key, string $rule, string|null $message = null, mixed $values = [])
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface addObject(string $key, string $ruleName, object $rule, string|null $message = null)
 *
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface accepted(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface acceptedIf(string $field, mixed $value, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface activeUrl(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface after(string $key, string $date, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface afterOrEqual(string $key, string $date, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface alpha(string $key, bool $isAscii = false, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface alphaDash(string $key, bool $isAscii = false, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface alphaNum(string $key, bool $isAscii = false, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface array(string $key, array|string $acceptKeys = [], string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface ascii(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface bail(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface before(string $key, string $date, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface beforeOrEqual(string $key, string $date, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface between(string $key, int $min, int $max, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface boolean(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface confirmed(string $key, array|string $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface contains(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface currentPassword(string $key, string $guard = "web", string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface date(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface dateEqual(string $key, string $date, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface dateFormat(string $key, string $format, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface decimal(string $key, int $min, int|null $max = null, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface declined(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface declinedIf(string $key, string $field, mixed $value, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface different(string $key, string $field, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface digits(string $key, int $min, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface digitsBetween(string $key, int $min, int $max, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface dimensions(string $key, int|null $width = null, int|null $height = null, int|null $minWidth = null, int|null $minHeight = null, int|null $maxWidth = null, int|null $maxHeight = null, float|string|null $ratio = null, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface distinct(string $key, bool $strict = false, bool $ignoreCase = false, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface doesntStartWith(string $key, array|string $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface doesntEndWith(string $key, array|string $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface email(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface endsWith(string $key, array|string $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface enum(string $key, string $enum, \Closure|null $callback = null, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface exclude(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface excludeIf(string $key, string $field, mixed $value, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface excludeUnless(string $key, string $field, mixed $value, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface excludeWith(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface excludeWithout(string $key, string $field, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface exists(string $key, string $table, string|null $column = null, \Closure|null $callback = null, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface extensions(string $key, array|string $extensions, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface file(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface filled(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface gt(string $key, string $field, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface gte(string $key, string $field, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface hexColor(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface image(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface in(string $key, array|string $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface inArray(string $key, string $field, string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface integer(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface ip(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface ipv4(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface ipv6(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface json(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface lt(string $key, string $field, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface lte(string $key, string $field, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface lowercase(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface list(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface macAddress(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface max(string $key, int $max, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface maxDigits(string $key, int $max, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface mimetypes(string $key, array|string $mimetypes, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface mimes(string $key, array|string $extensions, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface min(string $key, int $min, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface minDigits(string $key, int $min, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface multipleOf(string $key, int $num, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface missing(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface missingIf(string $key, string $field, array $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface missingUnless(string $key, string $field, array $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface missingWith(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface missingWithAll(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface notIn(string $key, array|string $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface notRegex(string $key, string $pattern, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface nullable(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface numeric(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface present(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface presentIf(string $key, string $field, mixed $value, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface presentUnless(string $key, string $field, mixed $value, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface presentWith(string $key, string $field, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface presentWithAll(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface prohibited(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface prohibitedIf(string $key, string $field, array $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface prohibitedUnless(string $key, string $field, array $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface prohibits(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface regex(string $key, string $pattern, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface required(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredIf(string $key, string $field, mixed $value, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredIfAccepted(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredIfDeclined(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredUnless(string $key, string $field, mixed $value, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredWith(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredWithAll(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredWithout(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredWithoutAll(string $key, array|string $fields, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface requiredArrayKeys(string $key, array|string $keys, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface same(string $key, string $field, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface size(string $key, int $size, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface startsWith(string $key, array|string $values, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface string(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface timezone(string $key, array|string $identifiers = [], string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface unique(string $key, string $table, string|null $column = null, \Closure|null $callback = null, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface uppercase(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface url(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface ulid(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface uuid(string $key, string|null $message = null)
 *
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface flag(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asDate(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asTime(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asDateTime(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asYearMonth(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asMonthDay(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asHourMinute(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asMinuteSecond(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asYear(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asMonth(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asMonthZero(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asMonthName(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asMonthNameShort(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asDay(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asDayZero(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asHour(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asHourZero(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asHourTwelveNotation(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asHourTwelveNotationZero(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asMinute(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface asSecond(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface existsNotDeleted(string $key, string $table, string|null $column = null, string $deletedAtColumn = "deleted_at", string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface existsDeleted(string $key, string $table, string|null $column = null, string $deletedAtColumn = "deleted_at", string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface id(string $key, string $table, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface tel(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface postCode(string $key, string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface uniqueNotDeleted(string $key, string $table, string|null $column = null, string $deletedAtColumn = "deleted_at", string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface uniqueDeleted(string $key, string $table, string|null $column = null, string $deletedAtColumn = "deleted_at", string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface uniqueIgnore(string $key, string $table, string|null $column = null, mixed $ignore = null, string $ignoreColumn = "id", string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface uniqueIgnoreNotDeleted(string $key, string $table, string|null $column = null, mixed $ignore = null, string $ignoreColumn = "id", string $deletedAtColumn = "deleted_at", string|null $message = null)
 * @method static \YukataRm\Laravel\Interface\Validation\RulesInterface uniqueIgnoreDeleted(string $key, string $table, string|null $column = null, mixed $ignore = null, string $ignoreColumn = "id", string $deletedAtColumn = "deleted_at", string|null $message = null)
 *
 * @see \YukataRm\Laravel\Facade\Manager\RulesManager
 */
class Rules extends Facade
{
    /**
     * Facade Accessor
     *
     * @return string
     */
    protected static function getFacadeAccessor(): string
    {
        return static::class;
    }
}
