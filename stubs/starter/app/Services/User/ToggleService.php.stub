<?php

namespace App\Services\User;

use YukataRm\Laravel\Service\ResourceService as BaseService;

use App\Http\Requests\User\Entities\ToggleEntity as Entity;

use Illuminate\Http\RedirectResponse;

use App\Facades\Repository;

/**
 * User Toggle Service
 *
 * @method static \Illuminate\Http\RedirectResponse handle(\App\Http\Requests\User\Entities\ToggleEntity $entity)
 */
class ToggleService extends BaseService
{
    /**
     * name
     *
     * @var string
     */
    protected string $name = "user";

    /**
     * entity instance
     *
     * @var \App\Http\Requests\User\Entities\ToggleEntity
     */
    protected Entity $entity;

    /**
     * construct
     *
     * @param \App\Http\Requests\User\Entities\ToggleEntity $entity
     * @return void
     */
    public function __construct(Entity $entity)
    {
        $this->entity = $entity;
    }

    /**
     * execute service
     *
     * @return \Illuminate\Http\RedirectResponse
     */
    public function execute(): RedirectResponse
    {
        return $this->toggle()
            ? $this->success()
            : $this->failure();
    }

    /**
     * toggle
     *
     * @return bool
     */
    protected function toggle(): bool
    {
        $user = Repository::user()->findRawById($this->entity->id);

        $user->is_active = !$user->is_active;

        return $this->runTransaction(function () use ($user) {
            $user->save();
        });
    }

    /**
     * toggle success response
     *
     * @return \Illuminate\Http\RedirectResponse
     */
    protected function success(): RedirectResponse
    {
        return $this->updateSuccessRedirect(
            $this->successPath(),
            $this->successParams()
        );
    }

    /**
     * toggle success response path
     *
     * @return string
     */
    protected function successPath(): string
    {
        return $this->resourceRoute("show");
    }

    /**
     * toggle success response params
     *
     * @return array<string, mixed>
     */
    protected function successParams(): array
    {
        return [
            "id" => $this->entity->id
        ];
    }

    /**
     * toggle failure response
     *
     * @return \Illuminate\Http\RedirectResponse
     */
    protected function failure(): RedirectResponse
    {
        return $this->updateFailureRedirect(
            $this->failurePath(),
            $this->failureParams(),
            $this->failureInput()
        );
    }

    /**
     * toggle failure response path
     *
     * @return string
     */
    protected function failurePath(): string
    {
        return $this->resourceRoute("show");
    }

    /**
     * toggle failure response params
     *
     * @return array<string, mixed>
     */
    protected function failureParams(): array
    {
        return [
            "id" => $this->entity->id
        ];
    }

    /**
     * toggle failure response input
     *
     * @return array<string, mixed>
     */
    protected function failureInput(): array
    {
        return $this->entity->data();
    }
}
